[{"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\index.tsx":"1","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\App.tsx":"3","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\header.tsx":"4","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Styles.ts":"5","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\PlayersPage.tsx":"6","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\PlayerPage.tsx":"7","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\NotFoundPage.tsx":"8","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Page.tsx":"9","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\PageTitle.tsx":"10","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Create\\PlayerCreatePage.tsx":"11","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Home\\HomePage.tsx":"12","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Stats\\Stats.tsx":"13","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\config.js":"14","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\SpecialAbilities.tsx":"15","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\AttrPage.tsx":"16","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\CoolPage.tsx":"17","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\Skills.tsx":"18"},{"size":501,"mtime":1629396119960,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1627571969218,"results":"21","hashOfConfig":"20"},{"size":1558,"mtime":1632414720236,"results":"22","hashOfConfig":"20"},{"size":1814,"mtime":1631561808170,"results":"23","hashOfConfig":"20"},{"size":450,"mtime":1629312144936,"results":"24","hashOfConfig":"20"},{"size":6497,"mtime":1632161080802,"results":"25","hashOfConfig":"20"},{"size":4790,"mtime":1630430097882,"results":"26","hashOfConfig":"20"},{"size":307,"mtime":1629412648943,"results":"27","hashOfConfig":"20"},{"size":478,"mtime":1630428755246,"results":"28","hashOfConfig":"20"},{"size":420,"mtime":1629916926065,"results":"29","hashOfConfig":"20"},{"size":3898,"mtime":1632414834725,"results":"30","hashOfConfig":"20"},{"size":1416,"mtime":1630441598509,"results":"31","hashOfConfig":"20"},{"size":9346,"mtime":1632418985780,"results":"32","hashOfConfig":"20"},{"size":417,"mtime":1630525098755,"results":"33","hashOfConfig":"20"},{"size":1792,"mtime":1631589264957,"results":"34","hashOfConfig":"20"},{"size":834,"mtime":1631562134980,"results":"35","hashOfConfig":"20"},{"size":546,"mtime":1631562614115,"results":"36","hashOfConfig":"20"},{"size":582,"mtime":1631560264871,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1nkdhls",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\index.tsx",[],["80","81"],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\App.tsx",["82","83","84","85","86"],"/** @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { css } from '@emotion/react';\nimport { Header } from './header';\nimport { HomePage } from './Views/Home/HomePage';\nimport { fontFamily, fontSize, gray2 } from './Styles';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport PlayerPage from './Views/PlayerPage';\nimport PlayersPage from './Views/PlayersPage';\nimport PlayerCreatePage from './Views/Create/PlayerCreatePage';\nimport NotFoundPage from './Views/NotFoundPage';\nimport StatsPage from './Views/Stats/Stats';\nimport { Steps, Step } from 'react-step-builder';\nimport SpecialAbilities from './Views/Skills/SpecialAbilities';\nimport AttrPage from './Views/Skills/AttrPage';\nimport CoolPage from './Views/Skills/CoolPage';\nimport SkillsPage from './Views/Skills/Skills';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div\n        css={css`\n          font-family: ${fontFamily};\n          font-size: ${fontSize};\n          color: ${gray2};\n        `}\n      >\n        <Header />\n        <Routes>\n          <Route path=\"\" element={<HomePage />} />\n          <Route path=\"Players\" element={<PlayersPage />} />\n          <Route path=\"Player/:id\" element={<PlayerPage />} />\n          <Route path=\"Create\" element={<PlayerCreatePage />} />\n          <Route path=\"Stats/:userID\" element={<StatsPage />} />\n          <Route path=\"Skills/:userID\" element={<SkillsPage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\header.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Styles.ts",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\PlayersPage.tsx",["87"],"/** @jsxImportSource @emotion/react */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Page } from './Page';\r\nimport { PageTitle } from './PageTitle';\r\nimport { Card } from 'react-bootstrap';\r\nimport { css } from '@emotion/react';\r\nimport pic from '../assets/samurai.png';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction PlayersPage() {\r\n  interface PlayersDataType {\r\n    id: number;\r\n    handle: string;\r\n    role: string;\r\n    avatar: string;\r\n    specialAbilities: {\r\n      playerId: number;\r\n      authority: number;\r\n      charismaticLeadership: number;\r\n      combatSense: number;\r\n      credibility: number;\r\n      family: number;\r\n      interface: number;\r\n      juryRig: number;\r\n      medicalTech: number;\r\n      resources: number;\r\n      streedeal: number;\r\n    };\r\n    stats: {\r\n      playerId: number;\r\n      int: number;\r\n      ref: number;\r\n      tech: number;\r\n      cool: number;\r\n      attr: number;\r\n      luck: number;\r\n      ma: number;\r\n      body: number;\r\n      emp: number;\r\n      run: number;\r\n      leap: number;\r\n      lift: number;\r\n    };\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [playersData, setPlayersData] = useState<Array<PlayersDataType>>([]);\r\n  const navigate = useNavigate();\r\n\r\n  const createNew = () => {\r\n    navigate('../Create');\r\n  };\r\n\r\n  const handleSelect = (id: number) => {\r\n    navigate('../Player/' + id, {\r\n      state: {\r\n        userId: id,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Fetch all players from database\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch('https://localhost:44326/api/Players/all')\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => setPlayersData(data))\r\n      .then(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  if (isLoading === true) {\r\n    return (\r\n      <Page>\r\n        <PageTitle>Loading...</PageTitle>\r\n      </Page>\r\n    );\r\n  } else {\r\n    return (\r\n      <Page>\r\n        <div>\r\n          <PageTitle>Toons</PageTitle>\r\n          <div\r\n            css={css`\r\n              justify-content: center;\r\n              margin-left: 255px;\r\n              margin-bottom: 10px;\r\n            `}\r\n          >\r\n            <button onClick={createNew}>Create New</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div //Every card is listed in 1 column\r\n          css={css`\r\n            flex-direction: column;\r\n            margin-left: 40px;\r\n          `}\r\n        >\r\n          {playersData.map((data) => (\r\n            <div key={data.id}>\r\n              <Card\r\n                css={css`\r\n                  display: flex;\r\n                  width: 500px;\r\n                  height: 200px;\r\n                  flex-direction: column;\r\n                  //border: 2px solid black;\r\n                  box-shadow: 0 3px 7px 0 rgba(30, 38, 46, 0.21);\r\n                  cursor: pointer;\r\n                  :hover {\r\n                    transform: scale(\r\n                      1.2\r\n                    ); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */\r\n                  }\r\n                `}\r\n                onClick={() => handleSelect(data.id)}\r\n              >\r\n                <div\r\n                  css={css`\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    //border: 2px solid orange;\r\n                  `}\r\n                >\r\n                  <Card.Img\r\n                    src={data.avatar}\r\n                    alt=\"No photo found.\"\r\n                    css={css`\r\n                      margin: 5px 10px 10px 10px;\r\n                      width: 150px;\r\n                      height: 150px;\r\n                      border-radius: 50%;\r\n                      box-shadow: 0 3px 7px 0 rgba(30, 38, 46, 0.21);\r\n                      //border: 2px solid black;\r\n                    `}\r\n                  />\r\n                  <Card.Body\r\n                    css={css`\r\n                      flex: 1;\r\n                      flex-direction: row;\r\n                      //border: 2px solid purple;\r\n                    `}\r\n                  >\r\n                    <div\r\n                      css={css`\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        //justify-content: space-between;\r\n                        flex-wrap: wrap;\r\n                      `}\r\n                    >\r\n                      <Card.Text>Int:</Card.Text>\r\n                      <Card.Text>{data.stats.int}</Card.Text>\r\n                      <Card.Text>Ref:</Card.Text>\r\n                      <Card.Text>{data.stats.ref}</Card.Text>\r\n                      <Card.Text>Tech:</Card.Text>\r\n                      <Card.Text>{data.stats.tech}</Card.Text>\r\n                      <Card.Text>Cool:</Card.Text>\r\n                      <Card.Text>{data.stats.cool}</Card.Text>\r\n                      <Card.Text>Attr:</Card.Text>\r\n                      <Card.Text>{data.stats.attr}</Card.Text>\r\n                      <Card.Text>Luck:</Card.Text>\r\n                      <Card.Text>{data.stats.luck}</Card.Text>\r\n                      <Card.Text>Ma:</Card.Text>\r\n                      <Card.Text>{data.stats.ma}</Card.Text>\r\n                      <Card.Text>Body:</Card.Text>\r\n                      <Card.Text>{data.stats.body}</Card.Text>\r\n                      <Card.Text>Emp:</Card.Text>\r\n                      <Card.Text>{data.stats.emp}</Card.Text>\r\n                      <Card.Text>Run:</Card.Text>\r\n                      <Card.Text>{data.stats.run}</Card.Text>\r\n                      <Card.Text>Leap:</Card.Text>\r\n                      <Card.Text>{data.stats.leap}</Card.Text>\r\n                      <Card.Text>Lift:</Card.Text>\r\n                      <Card.Text>{data.stats.lift}</Card.Text>\r\n                    </div>\r\n                  </Card.Body>\r\n                </div>\r\n                <Card.Title\r\n                  css={css`\r\n                    display: flex;\r\n                    width: 150px;\r\n                    flex-direction: row;\r\n                    justify-content: center;\r\n                    font-weight: bold;\r\n                    margin-bottom: 10px;\r\n                  `}\r\n                >\r\n                  {data.handle}, {data.role}\r\n                </Card.Title>\r\n              </Card>\r\n              <br></br>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayersPage;\r\n","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\PlayerPage.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\NotFoundPage.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Page.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\PageTitle.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Create\\PlayerCreatePage.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Home\\HomePage.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Stats\\Stats.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\config.js",[],["88","89"],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\SpecialAbilities.tsx",["90","91"],"import React from 'react';\r\nimport styles from './StyleSheets/SpecialAbilityStyles.module.css';\r\n\r\nfunction SpecialAbilities(props: any) {\r\n  const roles = ['Fixer', 'Techie', 'Cop'];\r\n  var item = roles[Math.floor(Math.random() * roles.length)];\r\n  console.log(item);\r\n  if (item == 'Fixer') {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.body}>\r\n          <h2 className={styles.title}>Special Ability</h2>\r\n          <p>\r\n            Streetdeal:{' '}\r\n            <input\r\n              name=\"streetdeal\"\r\n              value={props.getState('name', '')}\r\n              onChange={props.handleChange}\r\n            />\r\n          </p>\r\n          <button onClick={props.next}>Next</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (item == 'Cop') {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.body}>\r\n          <h2 className={styles.title}>Special Ability</h2>\r\n          <p>\r\n            Authority:{' '}\r\n            <input\r\n              name=\"authority\"\r\n              value={props.getState('name', '')}\r\n              onChange={props.handleChange}\r\n            />\r\n          </p>\r\n          <button onClick={props.next}>Next</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.body}>\r\n          <h2 className={styles.title}>Special Ability</h2>\r\n          <p>\r\n            Jury Rig:{' '}\r\n            <input\r\n              name=\"name\"\r\n              value={props.getState('name', '')}\r\n              onChange={props.handleChange}\r\n            />\r\n          </p>\r\n          <button onClick={props.next}>Next</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpecialAbilities;\r\n","C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\AttrPage.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\CoolPage.tsx",[],"C:\\Users\\e096752\\Documents\\Cole's Git Repos\\CyberpunkAPI\\frontend\\src\\Views\\Skills\\Skills.tsx",["92"],"import React, { useState } from 'react';\r\nimport { Steps, Step } from 'react-step-builder';\r\nimport SpecialAbilities from '../Skills/SpecialAbilities';\r\nimport AttrPage from '../Skills/AttrPage';\r\nimport CoolPage from '../Skills/CoolPage';\r\nimport styles from './StyleSheets/Skills.module.css';\r\n\r\nfunction SkillsPage() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Steps>\r\n        <Step component={SpecialAbilities} />\r\n        <Step component={AttrPage} />\r\n        <Step component={CoolPage} />\r\n      </Steps>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkillsPage;\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":13,"column":10,"nodeType":"99","messageId":"100","endLine":13,"endColumn":15},{"ruleId":"97","severity":1,"message":"101","line":13,"column":17,"nodeType":"99","messageId":"100","endLine":13,"endColumn":21},{"ruleId":"97","severity":1,"message":"102","line":14,"column":8,"nodeType":"99","messageId":"100","endLine":14,"endColumn":24},{"ruleId":"97","severity":1,"message":"103","line":15,"column":8,"nodeType":"99","messageId":"100","endLine":15,"endColumn":16},{"ruleId":"97","severity":1,"message":"104","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":16},{"ruleId":"97","severity":1,"message":"105","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":11},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"106","severity":1,"message":"107","line":8,"column":12,"nodeType":"108","messageId":"109","endLine":8,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":25,"column":19,"nodeType":"108","messageId":"109","endLine":25,"endColumn":21},{"ruleId":"97","severity":1,"message":"110","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'Steps' is defined but never used.","Identifier","unusedVar","'Step' is defined but never used.","'SpecialAbilities' is defined but never used.","'AttrPage' is defined but never used.","'CoolPage' is defined but never used.","'pic' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]